from aiogram import Router, Bot, types
from aiogram.types import Message,FSInputFile
from tgbot.config import load_config
from aiogram.dispatcher.fsm.context import FSMContext
from aiogram.dispatcher.fsm.state import State, StatesGroup

import psycopg2
from psycopg2 import sql
from psycopg2.extensions import AsIs
from tgbot.db import db_update

from tgbot.misc.functions import auf_status
from tgbot.misc.messages import info,spread
from tgbot.misc.states import min_spread_state

from tgbot.keyboards.inlineBtn import main_page, balance_btn,home_btn,user_settings_btn,choose_directions_btn,settings_directions_btn,min_spread_settings_btn

import datetime
import asyncio
import json

user_settings_router = Router()
config = load_config(".env")
bot = Bot(token=config.tg_bot.token, parse_mode='HTML')

base = psycopg2.connect(dbname=config.db.database, user=config.db.user, password=config.db.password,host=config.db.host)
cur = base.cursor()


@user_settings_router.callback_query(lambda c: c.data == 'settings')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    btn = user_settings_btn()
    await callback_query.message.edit_text('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è',reply_markup=btn.as_markup(),parse_mode="HTML")

    
@user_settings_router.callback_query(lambda c: c.data == 'choose directions')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    btn = choose_directions_btn()
    await callback_query.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',reply_markup=btn.as_markup(),parse_mode="HTML")
    
@user_settings_router.callback_query(lambda c: c.data == 'settings directions')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    btn = settings_directions_btn()
    await callback_query.message.edit_text('–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –Ω–∞–ø—Ä—è–º–æ–∫',reply_markup=btn.as_markup(),parse_mode="HTML")
    
@user_settings_router.callback_query(lambda c: c.data == 'minimal spread')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    # test = callback_query.message.reply_markup.inline_keyboard
    # print(test)
    btn = min_spread_settings_btn()
    await callback_query.message.edit_text('–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Å–ø—Ä–µ–¥',reply_markup=btn.as_markup(),parse_mode="HTML")
    
@user_settings_router.callback_query(lambda c: c.data == 'simple direction spread')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    cur.execute(''' SELECT ms.spread_value
                            FROM users
                                LEFT JOIN minimal_spread ms ON ms.user_id  = users.id
                        WHERE telegram_id = %s''',(str(user_id),))
    user = cur.fetchone()
    print(user[0])
    btn = home_btn()
    await callback_query.message.edit_text(f'''üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞:
    üî•–ù–∞–π–ø—Ä–æ—Å—Ç—ñ—à—ñ (–ù–∞–π–ª—ñ–∫–≤—ñ–¥–Ω—ñ—à—ñ) –∑–≤‚Äô—è–∑–∫–∏

    –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç—ã —Å–ø—Ä–µ–¥–æ–≤,
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏
    —Ä–∞–≤–Ω–æ –≤–∞—à–µ–º—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —Å–ø—Ä–µ–¥—É.

    –¢–µ–∫—É—â–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {user[0] if user[0] else "—Å–ø–µ—Ä–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"}

    ‚ùóÔ∏è –°–ø—Ä–µ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0.2% –¥–æ 100%
    ‚ùóÔ∏è –¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥''',reply_markup=btn.as_markup(),parse_mode="HTML")
    await state.update_data(id=callback_query.message.message_id)
    await state.update_data(direction='–ù–∞–π–ø—Ä–æ—Å—Ç—ñ—à—ñ (–ù–∞–π–ª—ñ–∫–≤—ñ–¥–Ω—ñ—à—ñ) –∑–≤‚Äô—è–∑–∫–∏')
    await state.set_state(min_spread_state.num)

@user_settings_router.callback_query(lambda c: c.data == 'interexchange spread')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    cur.execute(''' SELECT ms.spread_value
                            FROM users
                                LEFT JOIN minimal_spread ms ON ms.user_id  = users.id
                        WHERE telegram_id = %s''',(str(user_id),))
    user = cur.fetchone()
    print(user[0])
    btn = home_btn()
    await callback_query.message.edit_text(f'''üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞:
    üî•–ú—ñ–∂–±—ñ—Ä–∂–æ–≤—ñ

    –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç—ã —Å–ø—Ä–µ–¥–æ–≤,
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏
    —Ä–∞–≤–Ω–æ –≤–∞—à–µ–º—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —Å–ø—Ä–µ–¥—É.

    –¢–µ–∫—É—â–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {user[0] if user[0] else "—Å–ø–µ—Ä–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"}

    ‚ùóÔ∏è –°–ø—Ä–µ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0.2% –¥–æ 100%
    ‚ùóÔ∏è –¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥''',reply_markup=btn.as_markup(),parse_mode="HTML")
    await state.update_data(id=callback_query.message.message_id)
    await state.update_data(direction='–ú—ñ–∂–±—ñ—Ä–∂–æ–≤—ñ')
    await state.set_state(min_spread_state.num)

@user_settings_router.callback_query(lambda c: c.data == 'cash spread')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    cur.execute(''' SELECT ms.spread_value
                            FROM users
                                LEFT JOIN minimal_spread ms ON ms.user_id  = users.id
                        WHERE telegram_id = %s''',(str(user_id),))
    user = cur.fetchone()
    print(user[0])
    btn = home_btn()
    await callback_query.message.edit_text(f'''üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞:
    üî•–ì–æ—Ç—ñ–≤–∫–∞

    –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç—ã —Å–ø—Ä–µ–¥–æ–≤,
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏
    —Ä–∞–≤–Ω–æ –≤–∞—à–µ–º—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —Å–ø—Ä–µ–¥—É.

    –¢–µ–∫—É—â–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {user[0] if user[0] else "—Å–ø–µ—Ä–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"}

    ‚ùóÔ∏è –°–ø—Ä–µ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0.2% –¥–æ 100%
    ‚ùóÔ∏è –¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥''',reply_markup=btn.as_markup(),parse_mode="HTML")
    await state.update_data(id=callback_query.message.message_id)
    await state.update_data(direction='–ì–æ—Ç—ñ–≤–∫–∞')
    await state.set_state(min_spread_state.num)

@user_settings_router.callback_query(lambda c: c.data == 'binance spread')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    cur.execute(''' SELECT ms.spread_value
                            FROM users
                                LEFT JOIN minimal_spread ms ON ms.user_id  = users.id
                        WHERE telegram_id = %s''',(str(user_id),))
    user = cur.fetchone()
    print(user[0])
    btn = home_btn()
    await callback_query.message.edit_text(f'''üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞:
    üî•Binance

    –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç—ã —Å–ø—Ä–µ–¥–æ–≤,
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏
    —Ä–∞–≤–Ω–æ –≤–∞—à–µ–º—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —Å–ø—Ä–µ–¥—É.

    –¢–µ–∫—É—â–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {user[0] if user[0] else "—Å–ø–µ—Ä–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"}

    ‚ùóÔ∏è –°–ø—Ä–µ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0.2% –¥–æ 100%
    ‚ùóÔ∏è –¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥''',reply_markup=btn.as_markup(),parse_mode="HTML")
    await state.update_data(id=callback_query.message.message_id)
    await state.update_data(direction='Binance')
    await state.set_state(min_spread_state.num)

@user_settings_router.callback_query(lambda c: c.data == 'okx spread')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    cur.execute(''' SELECT ms.spread_value
                            FROM users
                                LEFT JOIN minimal_spread ms ON ms.user_id  = users.id
                        WHERE telegram_id = %s''',(str(user_id),))
    user = cur.fetchone()
    print(user[0])
    btn = home_btn()
    await callback_query.message.edit_text(f'''üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞:
    üî•OKX

    –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç—ã —Å–ø—Ä–µ–¥–æ–≤,
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏
    —Ä–∞–≤–Ω–æ –≤–∞—à–µ–º—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —Å–ø—Ä–µ–¥—É.

    –¢–µ–∫—É—â–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {user[0] if user[0] else "—Å–ø–µ—Ä–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"}

    ‚ùóÔ∏è –°–ø—Ä–µ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0.2% –¥–æ 100%
    ‚ùóÔ∏è –¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥''',reply_markup=btn.as_markup(),parse_mode="HTML")
    await state.update_data(id=callback_query.message.message_id)
    await state.update_data(direction='OKX')
    await state.set_state(min_spread_state.num)

@user_settings_router.callback_query(lambda c: c.data == 'bybit spread')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    cur.execute(''' SELECT ms.spread_value
                            FROM users
                                LEFT JOIN minimal_spread ms ON ms.user_id  = users.id
                        WHERE telegram_id = %s''',(str(user_id),))
    user = cur.fetchone()
    print(user[0])
    btn = home_btn()
    await callback_query.message.edit_text(f'''üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞:
    üî•ByBit

    –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç—ã —Å–ø—Ä–µ–¥–æ–≤,
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏
    —Ä–∞–≤–Ω–æ –≤–∞—à–µ–º—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —Å–ø—Ä–µ–¥—É.

    –¢–µ–∫—É—â–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {user[0] if user[0] else "—Å–ø–µ—Ä–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"}

    ‚ùóÔ∏è –°–ø—Ä–µ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0.2% –¥–æ 100%
    ‚ùóÔ∏è –¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥''',reply_markup=btn.as_markup(),parse_mode="HTML")
    await state.update_data(id=callback_query.message.message_id)
    await state.update_data(direction='ByBit')
    await state.set_state(min_spread_state.num)

@user_settings_router.callback_query(lambda c: c.data == 'wise spread')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    cur.execute(''' SELECT ms.spread_value
                            FROM users
                                LEFT JOIN minimal_spread ms ON ms.user_id  = users.id
                        WHERE telegram_id = %s''',(str(user_id),))
    user = cur.fetchone()
    print(user[0])
    btn = home_btn()
    await callback_query.message.edit_text(f'''üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞:
    üî•Wise

    –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç—ã —Å–ø—Ä–µ–¥–æ–≤,
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏
    —Ä–∞–≤–Ω–æ –≤–∞—à–µ–º—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —Å–ø—Ä–µ–¥—É.

    –¢–µ–∫—É—â–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {user[0] if user[0] else "—Å–ø–µ—Ä–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"}

    ‚ùóÔ∏è –°–ø—Ä–µ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0.2% –¥–æ 100%
    ‚ùóÔ∏è –¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥''',reply_markup=btn.as_markup(),parse_mode="HTML")
    await state.update_data(id=callback_query.message.message_id)
    await state.update_data(direction='Wise')
    await state.set_state(min_spread_state.num)

@user_settings_router.callback_query(lambda c: c.data == 'localbitcoins spread')
async def user_start(callback_query: types.CallbackQuery, state = FSMContext):
    user_id = callback_query.from_user.id
    cur.execute(''' SELECT ms.spread_value
                            FROM users
                                LEFT JOIN minimal_spread ms ON ms.user_id  = users.id
                        WHERE telegram_id = %s''',(str(user_id),))
    user = cur.fetchone()
    print(user[0])
    btn = home_btn()
    await callback_query.message.edit_text(f'''üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞:
    üî•LocalBitcoins

    –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç—ã —Å–ø—Ä–µ–¥–æ–≤,
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏
    —Ä–∞–≤–Ω–æ –≤–∞—à–µ–º—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —Å–ø—Ä–µ–¥—É.

    –¢–µ–∫—É—â–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {user[0] if user[0] else "—Å–ø–µ—Ä–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"}

    ‚ùóÔ∏è –°–ø—Ä–µ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0.2% –¥–æ 100%
    ‚ùóÔ∏è –¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥''',reply_markup=btn.as_markup(),parse_mode="HTML")
    await state.update_data(id=callback_query.message.message_id)
    await state.update_data(direction='LocalBitcoins')
    await state.set_state(min_spread_state.num)
    
@user_settings_router.message_handler(content_types=types.ContentType.TEXT, state=min_spread_state.num)
async def typeOfOrder(message: types.Message, state: min_spread_state):
    user_id = message.from_user.id
    text = message.text
    if text.isdigit():
        await state.update_data(num=text)
        data = await state.get_data()
        cur.execute("SELECT id FROM users WHERE telegram_id = %s",(str(user_id),))
        user = cur.fetchone()
        cur.execute("SELECT id FROM spread_directions WHERE name = %s",(data['direction'],))
        direction = cur.fetchone()
        cur.execute("UPDATE minimal_spread SET spread_direction = %s WHERE user_id = %s",(direction[0],user[0]))
        cur.execute("UPDATE minimal_spread SET spread_value = %s WHERE user_id = %s",(data['num'],user[0]))
        base.commit()
        
        cur.execute(''' SELECT ms.spread_value
                            FROM users
                                LEFT JOIN minimal_spread ms ON ms.user_id  = users.id
                        WHERE telegram_id = %s''',(str(user_id),))
        user = cur.fetchone()
        btn = home_btn()
        await bot.edit_message_text(chat_id = message.chat.id ,message_id=data['id'], text = f'''üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–µ–¥–∞:
    üî•{data['direction']}

    –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç—ã —Å–ø—Ä–µ–¥–æ–≤,
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏
    —Ä–∞–≤–Ω–æ –≤–∞—à–µ–º—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É —Å–ø—Ä–µ–¥—É.

    –¢–µ–∫—É—â–∏–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {user[0] if user[0] else "—Å–ø–µ—Ä–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"}

    ‚ùóÔ∏è –°–ø—Ä–µ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 0.2% –¥–æ 100%
    ‚ùóÔ∏è –¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥''' ,reply_markup=btn.as_markup(),parse_mode="HTML")
        await message.delete()
        await state.set_state(min_spread_state.num)
    else:
        await message.delete()
        await bot.send_message(user_id,'–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏(–¢–æ–ª—å–∫–æ —á–∏—Å–ª–æ)')
        await asyncio.sleep(5)
        await bot.delete_message(chat_id = message.chat.id ,message_id = message.message_id + 1 )
        await state.set_state(min_spread_state.num)
    
    
    
    
    
    